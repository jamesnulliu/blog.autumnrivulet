FROM nvidia/cuda:12.6.2-cudnn-devel-ubuntu24.04

LABEL maintainer="JamesNULLiu jamesnulliu@gmail.com"
LABEL version="1.0"

ARG CMAKE_VERSION=3.31.0
ARG CLANGD_VERSION=18.1.3
ARG LLVM_VERSION=20

# Install necessary packages
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y \
        git lsb-release software-properties-common gnupg  \
        vim-gtk3 wget jq ninja-build p7zip-full \
        build-essential gcc-11 g++-11 gdb \
        htop btop openssh-server tmux && \
    # Set priority 11 -> gcc-11 (g++-11 as slave)
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 11 \
        --slave /usr/bin/g++ g++ /usr/bin/g++-11 && \
    # Set priority 13 -> gcc-13 (g++-11 as slave)
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 13 \
        --slave /usr/bin/g++ g++ /usr/bin/g++-13 && \
    # Use gcc-11 (with g++-11) by default (i.e., gcc -> gcc-11, g++ -> g++-11).
    # [NOTE]
    # |- If you want to use gcc-13 (with g++-13) by default, run:
    # |-   $ update-alternatives --set gcc /usr/bin/gcc-13
    update-alternatives --set gcc /usr/bin/gcc-11 
    

# Install cmake, clangd and llvm
COPY cmake-${CMAKE_VERSION}-linux-x86_64.tar.gz \
     clangd-linux-${CLANGD_VERSION}.zip \
     llvm.sh \
     /tmp/
RUN tar -xf /tmp/cmake-${CMAKE_VERSION}-linux-x86_64.tar.gz -C /usr/local && \
    ln -s /usr/local/cmake-3.31.0-linux-x86_64 /usr/local/cmake && \
    7z x /tmp/clangd-linux-${CLANGD_VERSION}.zip -o/usr/local && \
    ln -s /usr/local/clangd_${CLANGD_VERSION} /usr/local/clangd && \
    chmod =x /tmp/llvm.sh && /tmp/llvm.sh ${LLVM_VERSION} && \
    # Set priority ${LLVM_VERSION} -> clang-${LLVM_VERSION} (clang++-${LLVM_VERSION} and lldb-${LLVM_VERSION} as slave)
    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${LLVM_VERSION} ${LLVM_VERSION} \
        --slave /usr/bin/clang++ clang++ /usr/bin/clang++-${LLVM_VERSION} \
        --slave /usr/bin/lldb lldb /usr/bin/lldb-${LLVM_VERSION}

# Install Miniconda3
COPY Miniconda3-latest-Linux-x86_64.sh /tmp/miniconda3.sh
RUN mkdir -p /root/miniconda3 && \
    bash /tmp/miniconda3.sh -b -u -p /root/miniconda3 && \
    \. /root/miniconda3/bin/activate && \
    conda init --all && \
    # Install torch in base env without cache
    pip install -i https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple --no-cache-dir torch torchvision torchaudio

# Some final steps
COPY .bashrc.in .vimrc /tmp/
RUN touch /root/.bashrc && cat /tmp/.bashrc.in >> /root/.bashrc && \
    mv /tmp/.vimrc /root/.vimrc && \
    apt-get clean && rm -rf /var/lib/apt/lists/* 